# Kconfig.mcp2515 - MCP2515 CAN configuration options

#
# Copyright (c) 2018 Karsten Koenig
#
# SPDX-License-Identifier: Apache-2.0
#

config CAN_MCP2515
	bool "MCP2515 CAN Driver"
	depends on SPI
	help
	  Enable MCP2515 CAN Driver

if CAN_MCP2515

config CAN_MCP2515_NAME
	string "Driver name"
	default "MCP2515"

config CAN_MCP2515_OSC_FREQ
	int "Oscillator frequency"
	default 8000000
	help
	  Specify the frequency of the oscillator connected to the MCP2515.

config CAN_PROP_SEG
	int "Prop_Seg"
	default 2
	range 1 8
	help
	  Time quantums of propagation segment (ISO 11898-1)

config CAN_PHASE_SEG1
	int "Phase_Seg1"
	default 7
	range 1 8
	help
	  Time quantums of phase buffer 1 segment (ISO 11898-1)

config CAN_PHASE_SEG2
	int "Phase_Seg2"
	default 6
	range 2 8
	help
	  Time quantums of phase buffer 2 segment (ISO 11898-1)

config CAN_SJW
	int "SJW"
	default 1
	range 1 4
	help
	  Resynchronization jump width  (ISO 11898-1)

config CAN_MCP2515_SPI_PORT_NAME
	string "SPI device where MCP2515 is connected"
	default "SPI_1"
	help
	 Specify the device name of the SPI device to which MCP2515 is
	 connected.

config CAN_MCP2515_SPI_SLAVE
	int "SPI Slave Select where MCP2515 is connected"
	default 1
	help
	 Specify the slave select pin of the SPI to which MCP2515 is
	 connected.

config CAN_MCP2515_SPI_FREQ
	int "SPI frequency to use with MCP2515"
	default 1000000
	help
	 SPI frequency to use with MCP2515

config CAN_MCP2515_INT_PORT_NAME
	string "INT GPIO controller port name"
	default "GPIO_0"
	help
	  GPIO port where INT is connected.

config CAN_MCP2515_INT_PIN
	int "INT GPIO pin"
	default 19
	help
	  GPIO pin where INT is connected.

config CAN_MCP2515_INT_THREAD_STACK_SIZE
	int "Stack size for interrupt handler"
	default 512
	help
	  Size of the stack used for internal thread which is ran for
	  interrupt handling and incoming packets.

config CAN_MCP2515_INT_THREAD_PRIO
	int "Priority for interrupt handler"
	default 2
	help
	  Priority level of the internal thread which is ran for
	  interrupt handling and incoming packets.

config CAN_MCP2515_GPIO_SPI_CS
	bool "Manage SPI CS through a GPIO pin"
	help
	  This option is useful if one needs to manage SPI CS through a GPIO
	  pin to by-pass the SPI controller's CS logic.

if CAN_MCP2515_GPIO_SPI_CS
config CAN_MCP2515_SPI_CS_PORT_NAME
	string "GPIO driver's name to use to drive SPI CS through"
	help
	  This option is mandatory to set which GPIO controller to use in
	  order to actually emulate the SPI CS.

config CAN_MCP2515_SPI_CS_PIN
	int "GPIO PIN to use to drive SPI CS through"
	default 0
	help
	  This option is mandatory to set which GPIO pin to use in order
	  to actually emulate the SPI CS.

endif #CAN_MCP2515_GPIO_SPI_CS

config CAN_MCP2515_MAX_FILTER
	int "Maximum number of concurrent active filters"
	default 5
	range 1 32
	help
	  Defines the array size of the callback/msgq pointers.
	  Must be at least the size of concurrent reads.


config CAN_MCP2515_INIT_PRIORITY
	int "Init priority"
	default 80
	help
	  MCP2515 driver initialization priority, must be higher than SPI.

endif # CAN_MCP2515
